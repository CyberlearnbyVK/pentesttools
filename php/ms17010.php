<html>
<div id="content"></div>
<div id="current_port"></div>

    <script src='https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js'></script>
    <script>


crentip='<?php echo ($_SERVER['SERVER_ADDR']);?>';
console.log('%csmbver scanner v 0.1\n\nIP:'+crentip+'\nUsage:\n\n Chrome Console > check\(\''+crentip+'\'\)\n\n', 'color: green; font-weight: bold;');


function check(ip){
    if(typeof ip !== "undefined"){
        var idx=ip.lastIndexOf('.'),
        ip_prefix=ip.substr(0,idx + 1),
        i=+1;
        post_ajax(ip_prefix,i)
    } else{
        console.log('%csmbver scanner v 0.1\n\nIP:'+crentip+'\nUsage:\n\n Chrome Console > check\(\''+crentip+'\'\)\n\n', 'color: green; font-weight: bold;');
    }
    

}


function post_ajax(ip_prefix,i){
    if(i>255){
        return ;
     
    }else{
        $.ajax({
        type: 'post',
        url: '',
        data: {
            host: ''+ip_prefix +i
        },
        success: function(data){
            console.log('%c Scan IP: ' + ip_prefix+i,'color: green; font-weight: bold;')
            document.getElementById('content').innerHTML = document.getElementById('content').innerHTML + data;
            post_ajax(ip_prefix,i+1);
            document.getElementById('current_port').innerHTML = 'Scanen IP: ' + ip_prefix+i;
        }
    })
    }
 

}
</script>
</html>


<?php
@error_reporting(1);


if(@$_POST['host']){
        $host=trim($_POST['host']);
        if(ms17010($host,445)){
                echo '<span style="color:#F00">[+] '.$host.' Vulnerability!</span>';
        }else{
                //echo '<span style="color:#000">[-] '.$host.' No Vulnerability!</span>';
        }
        if(strlen(smbos($host,445))>3){
                echo '<br>[+] '.$host.' OS: '.'<span style="color:#666">'.smbos($host,445).'</span><br>';
        }
}

function ms17010($host,$port){
        $tcp='tcp://'.$host.':'.$port;
        $sock=stream_socket_client($tcp,$errno, $errstr, 3,STREAM_CLIENT_CONNECT);
        if ($sock){
                $data1=pack('H*','00000054ff534d42720000000018012800000000000000000000000000002f4b0000c55e003100024c414e4d414e312e3000024c4d312e325830303200024e54204c414e4d414e20312e3000024e54204c4d20302e313200');
                fwrite($sock,$data1);
                fread($sock, 1024);
                $data2=pack('H*','00000063ff534d42730000000018012000000000000000000000000000002f4b0000c55e0dff000000dfff02000100000000000000000000000000400000002600002e0057696e646f7773203230303020323139350057696e646f7773203230303020352e3000');
                fwrite($sock,$data2);
                $data2_data=fread($sock, 1024);
                $user_id=substr(bin2hex($data2_data),64,4);
                $data3=pack('H*','000000'.dechex(58+strlen($host)).'ff534d42750000000018012000000000000000000000000000002f4b'.$user_id.'c55e04ff000000000001001a00005c5c'.bin2hex($host).'5c49504324003f3f3f3f3f00');
                fwrite($sock,$data3);
                $data3_data=fread($sock, 1024);
                $allid=substr(bin2hex($data3_data),28*2,16);
                $data4=pack('H*','0000004aff534d422500000000180128000000000000000000000000'.$allid.'1000000000ffffffff0000000000000000000000004a0000004a0002002300000007005c504950455c00');
                fwrite($sock,$data4);
                $data4_data=fread($sock, 1024);
                if(substr(bin2hex($data4_data),18,8) == '050200c0'){
                        return true;
                }else{
                        return false;
                }
        }
}
function smbos($host,$port){
        $tcp='tcp://'.$host.':'.$port;
        $sock=stream_socket_client($tcp,$errno, $errstr, 3,STREAM_CLIENT_CONNECT);
        if ($sock){
                $payload1=pack('H*','00000085ff534d4272000000001853c80000000000000000000000000000fffe00000000006200025043204e4554574f524b2050524f4752414d20312e3000024c414e4d414e312e30000257696e646f777320666f7220576f726b67726f75707320332e316100024c4d312e325830303200024c414e4d414e322e3100024e54204c4d20302e313200');
                $payload2=pack('H*','0000010aff534d4273000000001807c80000000000000000000000000000fffe000040000cff000a01044132000000000000004a0000000000d40000a0cf00604806062b0601050502a03e303ca00e300c060a2b06010401823702020aa22a04284e544c4d5353500001000000078208a2000000000000000000000000000000000502ce0e0000000f00570069006e0064006f0077007300200053006500720076006500720020003200300030003300200033003700390030002000530065007200760069006300650020005000610063006b002000320000000000570069006e0064006f0077007300200053006500720076006500720020003200300030003300200035002e00320000000000');
                fwrite($sock,$payload1);
                $out1=fread($sock, 1024);
                fwrite($sock,$payload2);
                $out2=fread($sock, 1024);
                $blob_len_arr=unpack('s',substr($out2,36+7,2));
                $osarr=explode(chr(0),iconv('UTF-16LE','UTF-8',substr($out2,36+11+$blob_len_arr[1])));
                return $osarr[0].'|'.$osarr[1];
        }
}
?>